/*
 * This source is part of the
 *      _____  ___   ____
 *  __ / / _ \/ _ | / __/___  _______ _
 * / // / , _/ __ |/ _/_/ _ \/ __/ _ `/
 * \___/_/|_/_/ |_/_/ (_)___/_/  \_, /
 *                              /___/
 * repository.
 *
 * Copyright (C) 2015 Benoit 'BoD' Lubek (BoD@JRAF.org)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "org.jraf.android.downloadandshareimage"
        minSdkVersion 8
        targetSdkVersion 21
        versionCode buildNumber
        versionName buildProperties['versionName']
        resConfigs "en", "fr"
    }

    signingConfigs {
        release {
            storeFile file(buildProperties['key-store'])
            storePassword buildProperties['key-store-password']
            keyAlias buildProperties['key-alias']
            keyPassword buildProperties['key-alias-password']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'org.jraf:jraf-android-util:1.0.0'
}

task deploy(dependsOn: assembleRelease) << {
    description 'Build a release apk, copy the result to the deploy and \'etc\' folders, then increment the build number.'

    // Copy the apk to the 'etc' folder
    new File('etc/apk').mkdirs()
    copy {
        from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
        into '../etc/apk'
        rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Also copy the apk to the deploy folder
    copy {
        from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
        into buildProperties['deploy-folder']
        rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Copy the proguard mapping to the 'etc' folder
    new File('etc/proguard').mkdirs()
    copy {
        from buildDir.getPath() + '/outputs/mapping/release/mapping.txt'
        into '../etc/proguard'
        rename 'mapping.txt', "mapping-${android.defaultConfig.versionCode}.txt"
    }

    // Increment build number
    buildNumberProperties['build.number'] = (buildNumber + 1).toString()
    buildNumberProperties.store(buildNumberFile.newWriter(), null)
}